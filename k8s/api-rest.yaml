apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-rest
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api-rest
rules:
# - apiGroups: ["*"]
#   resources: ["*"]
#   verbs: ["get","list","create","delete","update"]
- apiGroups: [""]
  verbs: ["get","list","create","delete","update"]
  resources: ["pods"]
- apiGroups: [""]
  verbs: ["get","list","create","delete","update"]
  resources: ["namespaces"]
- apiGroups: ["apps"]
  verbs: ["get","list","create","delete","update"]
  resources: ["deployments"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: api-rest
subjects:
- kind: User
  name: system:serviceaccount:default:api-rest
  apiGroup: rbac.authorization.k8s.io
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: api-rest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-rest
spec:
  selector:
    matchLabels:
      app: api-rest
  replicas: 3
  template:
    metadata:
      labels:
        app: api-rest
        version: v1
    spec:
      serviceAccountName: api-rest
      initContainers:
      - name: scalability
        image: wjma90/simple-init-container:latest
        imagePullPolicy: Always
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: TOPICS
          value: db_ms_demo.v1.request,db_ms_demo.v1.response
        - name: kafka_brokers
          value: "kafka1.default:19092"
      containers:
      - name: main
        image: wjma90/simple-api-rest:latest
        imagePullPolicy: Always
        env:
        - name: application_name
          value: "api-rest-demo"
        - name: kafka_brokers
          value: "kafka1.default:19092"
        - name: kafka_group_id
          value: "api-rest-demo"
        - name: kafka_request_topic
          value: "db_ms_demo.v1.request"
        - name: kafka_reply_topic
          value: "db_ms_demo.v1.response"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
---
apiVersion: v1
kind: Service
metadata:
  name: api-rest
  labels:
    app: api-rest
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: api-rest